{"version":3,"sources":["api/covid19Api.js","components/Sidebar/index.jsx","components/Result/index.jsx","pages/Home/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["covid19Api","getDefault","fetch","getAllDate","getSummary","getCountries","getTotalCountries","slugContry","getLiveByCountry","getLiveByCountryStatus","status","getDayOneAllStatus","getTotalDayOneAllStatus","getDayOneStatus","getTotalDayOneStatus","Sidebar","props","countriesList","chooseCountry","className","Countries","result","length","map","country","index","onClick","countrySlug","handleClickContry","Slug","Country","showCountriesList","defaultProps","Result","resultList","Row","item","Date","Active","Confirmed","Deaths","Recovered","City","showResultList","HomePage","useState","Global","NewConfirmed","NewDeaths","NewRecovered","TotalConfirmed","TotalDeaths","TotalRecovered","covid19Sumary","setCovid19Sumary","setCountriesList","setResultList","getCovid19Api","a","response","json","responseJson","console","log","getCovid19CountriesApi","getCovid19DayOneAllStatusApi","useEffect","Container","Col","md","slug","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc996168.chunk.js","sourcesContent":["const covid19Api = {\r\n    getDefault: () => {\r\n        const url = 'https://api.covid19api.com';\r\n        return fetch(url);\r\n    },\r\n    getAllDate: () => {\r\n        const url = 'https://api.covid19api.com/all';\r\n        return fetch(url);\r\n    },\r\n    getSummary: () => {\r\n        const url = 'https://api.covid19api.com/summary';\r\n        return fetch(url);\r\n    },\r\n    getCountries: () => {\r\n        const url = 'https://api.covid19api.com/countries';\r\n        return fetch(url);\r\n    },\r\n    getTotalCountries: (slugContry) => {\r\n        const url = 'https://api.covid19api.com/total/country/' + slugContry;\r\n        return fetch(url);\r\n    },\r\n    getLiveByCountry: (slugContry) => {\r\n        const url = 'https://api.covid19api.com/live/country/' + slugContry;\r\n        return fetch(url);\r\n    },\r\n    getLiveByCountryStatus: (slugContry, status) => {\r\n        const url = 'https://api.covid19api.com/live/country/' + slugContry + '/status/' + status;\r\n        return fetch(url);\r\n    },\r\n    getDayOneAllStatus: (slugContry) => {\r\n        const url = 'https://api.covid19api.com/dayone/country/' + slugContry;\r\n        return fetch(url);\r\n    },\r\n    getTotalDayOneAllStatus: (slugContry) => {\r\n        const url = 'https://api.covid19api.com/total/dayone/country/' + slugContry;\r\n        return fetch(url);\r\n    },\r\n    getDayOneStatus: (slugContry, status) => {\r\n        const url = 'https://api.covid19api.com/dayone/country/' + slugContry + '/status/' + status;\r\n        return fetch(url);\r\n    },\r\n    getTotalDayOneStatus: (slugContry, status) => {\r\n        const url = 'https://api.covid19api.com/total/dayone/country/' + slugContry + '/status/' + status;\r\n        return fetch(url);\r\n    },\r\n}\r\nexport default covid19Api;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.scss';\r\n\r\nSidebar.propTypes = {\r\n    countriesList: PropTypes.array,\r\n    chooseCountry: PropTypes.func\r\n};\r\n\r\nSidebar.defaultProps = {\r\n    countriesList: [],\r\n    chooseCountry: null\r\n}\r\n\r\nfunction Sidebar(props) {\r\n    const { countriesList, chooseCountry } = props;\r\n\r\n    function handleClickContry(countrySlug) {\r\n        if (!chooseCountry) return false;\r\n        chooseCountry(countrySlug);\r\n    }\r\n\r\n    const showCountriesList = (Countries) => {\r\n        var result = [];\r\n        if (Countries.length <= 0) return result;\r\n\r\n        result = Countries.map((country, index) => {\r\n            return (\r\n                <li key={index} onClick={() => { handleClickContry(country.Slug) }}>\r\n                    {country.Country}\r\n                </li>\r\n            );\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar-item\">\r\n                <div className=\"item-head\">\r\n                    <h3 className=\"collapse-btn\">\r\n                        Countries\r\n                    </h3>\r\n                </div>\r\n                <div className=\"item-main\">\r\n                    <ul className=\"list-1\">\r\n                        {showCountriesList(countriesList)}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Row } from 'reactstrap';\r\n\r\nResult.propTypes = {\r\n    resultList: PropTypes.array\r\n};\r\n\r\nResult.defaultProps = {\r\n    resultList: [],\r\n}\r\n\r\nfunction Result(props) {\r\n    const { resultList } = props;\r\n\r\n    const showResultList = (Result) => {\r\n        var result = [];\r\n        if (Result.length <= 0) return result;\r\n\r\n        result = Result.map((item, index) => {\r\n            return (\r\n                <div className=\"col-md-4 col-sm-6 mt-15 mb-15\" key={index}>\r\n                    <h4>{item.Date}</h4>\r\n                    <p>Active: {item.Active}</p>\r\n                    <p>Confirmed: {item.Confirmed}</p>\r\n                    <p>Deaths: {item.Deaths}</p>\r\n                    <p>Recovered: {item.Recovered}</p>\r\n                    <p>Country: {item.Country}</p>\r\n                    <p>City: {item.City}</p>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            {showResultList(resultList)}\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default Result;","import React, { useEffect, useState } from 'react';\r\nimport './style.scss';\r\nimport covid19Api from 'api/covid19Api';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport Sidebar from 'components/Sidebar';\r\nimport Result from 'components/Result';\r\n\r\nfunction HomePage() {\r\n    const [covid19Sumary, setCovid19Sumary] = useState({\r\n        Global: {\r\n            NewConfirmed: 0,\r\n            NewDeaths: 0,\r\n            NewRecovered: 0,\r\n            TotalConfirmed: 0,\r\n            TotalDeaths: 0,\r\n            TotalRecovered: 0,\r\n        },\r\n    });\r\n    const [countriesList, setCountriesList] = useState([]);\r\n    const [resultList, setResultList] = useState([]);\r\n\r\n    const getCovid19Api = async () => {\r\n        try {\r\n            const response = await covid19Api.getSummary();\r\n            const responseJson = await response.json();\r\n            setCovid19Sumary(responseJson);\r\n        } catch (error) {\r\n            console.log('Failed to fetch results: ', error);\r\n        }\r\n    };\r\n    const getCovid19CountriesApi = async () => {\r\n        try {\r\n            const response = await covid19Api.getCountries();\r\n            const responseJson = await response.json();\r\n            setCountriesList(responseJson);\r\n        } catch (error) {\r\n            console.log('Failed to fetch results: ', error);\r\n        }\r\n    };\r\n    const getCovid19DayOneAllStatusApi = async (slugContry) => {\r\n        try {\r\n            const response = await covid19Api.getDayOneAllStatus(slugContry);\r\n            const responseJson = await response.json();\r\n            setResultList(responseJson);\r\n        } catch (error) {\r\n            console.log('Failed to fetch results: ', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getCovid19Api();\r\n        getCovid19CountriesApi();\r\n    }, []);\r\n\r\n    function handleClickContry(slug) {\r\n        getCovid19DayOneAllStatusApi(slug);\r\n    }\r\n\r\n    return (\r\n        <div className=\"home-page\">\r\n            <Container>\r\n                <h1 className=\"text-center\">Covid19</h1>\r\n                <table className=\"w-100 mb-50\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>New Confirmed:</th>\r\n                            <td>{covid19Sumary.Global.NewConfirmed}</td>\r\n                            <th>New Deaths:</th>\r\n                            <td>{covid19Sumary.Global.NewDeaths}</td>\r\n                            <th>New Recovered:</th>\r\n                            <td>{covid19Sumary.Global.NewRecovered}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Total Confirmed:</th>\r\n                            <td>{covid19Sumary.Global.TotalConfirmed}</td>\r\n                            <th>Total Deaths:</th>\r\n                            <td>{covid19Sumary.Global.TotalDeaths}</td>\r\n                            <th>Total Recovered:</th>\r\n                            <td>{covid19Sumary.Global.TotalRecovered}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <Row className=\"mt-50\">\r\n                    <Col md=\"3\">\r\n                        <div className=\"countries mb-50\">\r\n                            <Sidebar countriesList={countriesList} chooseCountry={handleClickContry} />\r\n                        </div>\r\n                    </Col>\r\n                    <Col md=\"9\">\r\n                        <Result resultList={resultList} />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport './App.scss';\nimport HomePage from 'pages/Home';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<BrowserRouter>\n\t\t\t\t<main className=\"page-main w-100\">\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\" component={HomePage} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</main>\n\t\t\t</BrowserRouter>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}